version: '3.9'
services:
  db:
    container_name: fastapi_project_postgres
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - DB_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 100
    networks:
      - fastapi_project_network
  redis:
    container_name: fastapi_project_redis
    image: redis:latest
    expose:
      - 6379
    ports:
      - "9000:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 200
    networks:
      - fastapi_project_network
  api:
    container_name: fastapi_project_app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    entrypoint: >
      sh -c "
        echo 'Starting project...' &&
        echo 'Applying migrations' &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --reload
      "
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - fastapi_project_network
    restart: always
volumes:
  postgres_data:
networks:
  fastapi_project_network:
    name: fastapi_project_network
